package qwert.testFealds.testDataFealds;import org.junit.jupiter.api.Assertions;import org.junit.jupiter.api.Test;import qwert.Specification;import java.util.List;import java.util.stream.Collectors;import static io.restassured.RestAssured.given;public class TestSortYearOnRequest {    private final String url = "https://reqres.in/";    @Test    public void checkSortingYear(){        Specification.installSpecification(Specification.requestSpecification(url), Specification.responseSpecificationIndividualStatusCode(200));        // Тут мы записываем из ответа все поля которые записаны в DataFields        List<DataFields> dataFields = given()                .when()                .get("/api/unknown")                .then().log().all()                .extract().body().jsonPath().getList("data", DataFields.class);        // Тут мы выберем все поля years и перенесем в отдельный лист, который уже будем проверять на сортированность        List<Integer> years = dataFields.stream().map(DataFields::getYear).toList(); // получили список годов        List<Integer> sortedYears = years.stream().sorted().toList();                // сортируем года по возрастанию        Assertions.assertEquals(sortedYears, years); // Проверяем, что совпадает ожидаемый результат с реальным результатом        System.out.println(sortedYears); // Ответ отсортирован и какой именно ожидается        System.out.println(years); // какой ответ приходит в реальности    }}